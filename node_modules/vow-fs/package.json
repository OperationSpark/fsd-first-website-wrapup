{
  "_args": [
    [
      {
        "raw": "vow-fs@0.3.1",
        "scope": null,
        "escapedName": "vow-fs",
        "name": "vow-fs",
        "rawSpec": "0.3.1",
        "spec": "0.3.1",
        "type": "version"
      },
      "/Users/benspector/Documents/WORK/OpSpark/dev/fundamentals/testing/fsd-first-website-wrapup/node_modules/html-differ"
    ]
  ],
  "_from": "vow-fs@0.3.1",
  "_id": "vow-fs@0.3.1",
  "_inCache": true,
  "_location": "/vow-fs",
  "_npmUser": {
    "name": "dfilatov",
    "email": "dfilatov@yandex-team.ru"
  },
  "_npmVersion": "1.3.21",
  "_phantomChildren": {
    "inherits": "2.0.3",
    "lru-cache": "2.7.3",
    "sigmund": "1.0.1"
  },
  "_requested": {
    "raw": "vow-fs@0.3.1",
    "scope": null,
    "escapedName": "vow-fs",
    "name": "vow-fs",
    "rawSpec": "0.3.1",
    "spec": "0.3.1",
    "type": "version"
  },
  "_requiredBy": [
    "/html-differ"
  ],
  "_resolved": "https://registry.npmjs.org/vow-fs/-/vow-fs-0.3.1.tgz",
  "_shasum": "1b7fc64d7273a7c12690021674c1a904ceab8caf",
  "_shrinkwrap": null,
  "_spec": "vow-fs@0.3.1",
  "_where": "/Users/benspector/Documents/WORK/OpSpark/dev/fundamentals/testing/fsd-first-website-wrapup/node_modules/html-differ",
  "author": {
    "name": "Dmitry Filatov",
    "email": "dfilatov@yandex-team.ru"
  },
  "bugs": {
    "url": "https://github.com/dfilatov/vow-fs/issues"
  },
  "contributors": [
    {
      "name": "Dmitry Filatov",
      "email": "dfilatov@yandex-team.ru"
    }
  ],
  "dependencies": {
    "glob": "3.2.8",
    "node-uuid": "1.4.0",
    "vow-queue": "0.1.0"
  },
  "description": "File I/O by Vow",
  "devDependencies": {
    "istanbul": "",
    "nodeunit": "",
    "vow": "0.4.x"
  },
  "directories": {},
  "dist": {
    "shasum": "1b7fc64d7273a7c12690021674c1a904ceab8caf",
    "tarball": "https://registry.npmjs.org/vow-fs/-/vow-fs-0.3.1.tgz"
  },
  "engines": {
    "node": ">= 0.6.0"
  },
  "homepage": "https://github.com/dfilatov/vow-fs",
  "keywords": [
    "vow",
    "promise",
    "file system"
  ],
  "main": "lib/fs",
  "maintainers": [
    {
      "name": "dfilatov",
      "email": "dfilatov@yandex-team.ru"
    }
  ],
  "name": "vow-fs",
  "optionalDependencies": {},
  "peerDependencies": {
    "vow": "0.4.x"
  },
  "readme": "vow-fs [![NPM version](https://badge.fury.io/js/vow-fs.png)](http://badge.fury.io/js/vow-fs) [![Build Status](https://secure.travis-ci.org/dfilatov/vow-fs.png)](http://travis-ci.org/dfilatov/vow-fs)\n======\n\n[Vow](https://github.com/dfilatov/vow)-based file I/O for Node.js\n\nRequirements\n------------\nVow-fs works with Node.js 0.6, 0.8 and 0.10.\n\nGetting Started\n---------------\nYou can install vow-fs using Node Package Manager (npm):\n\n    npm install vow-fs\n\n####Usage####\n````javascript\nvar fs = require('vow-fs');\n````\n\nAPI\n---\n####read(path, [encoding=utf8])####\nReturns a promise for the file's content at a given ````path````.\n####write(path, data, [encoding=utf8])####\nWrites ````data```` to file at a given ````path````. Returns a promise for the completion of the operation.\n####append(path, data, [encoding=utf8])####\nAppends````data```` to file's content at a given ````path````. Returns a promise for the completion of the operation.\n####remove(path)####\nRemoves a file at a given ````path````. Returns a promise for the completion of the operation.\n####copy(sourcePath, targetPath)####\nCopies a file from ````sourcePath```` to ````targetPath````. Returns a promise for the completion of the operation.\n####move(sourcePath, targetPath)####\nMoves a file or directory from ````sourcePath```` to ````targetPath````. Returns a promise for the completion of the operation.\n####stats(path)####\nReturns a promise for the metadata about the given ````path```` as a [Stats](http://nodejs.org/api/fs.html#fs_class_fs_stats) object.\n####exists(path)####\nReturns a promise for whether the given ````path```` exists.\n####link(sourcePath, targetPath)####\nCreates a hard link from the ````sourcePath```` to ````targetPath````.\n####symLink(sourcePath, targetPath, [type=file])####\nCreates a symbolic link from the ````sourcePath```` to ````targetPath````.\n####chown(path, uid, gid)####\nChanges the owner of a given ````path````.\n####chmod(path, mode)####\nChanges the mode of a given ````path```` to ````mode````.\n####absolute(path)####\n####isFile(path)####\nReturns a promise for whether the given ````path```` is a file.\n####isDir(path)####\nReturns a promise for whether the given ````path```` is a directory.\n####isSocket(path)####\nReturns a promise for whether the given ````path```` is a socket.\n####isSymLink(path)####\nReturns a promise for whether the given ````path```` is a symbolic link.\n####makeTmpFile([options])####\nMakes a temporary file. Returns a promise with generated path to file.\nThe ````options````:\n  * prefix (absent by default)\n  * dir (operating system's directory for temp files by default)\n  * ext (````.tmp```` by default)\n\n####listDir(path)####\nReturns a promise for a list of files and directories in directory at the given ````path````.\n####makeDir(path, [mode=0777], [failIfExist=false])####\nMakes a directory at a given ````path```` and any necessary subdirectories (like ````mkdir -p````). Returns a promise for the completion of the operation.\n####removeDir(path)####\nRecursively removes a directory at a given path (like ````remove -rf````). Returns a promise for the completion of the operation.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/dfilatov/vow-fs.git"
  },
  "scripts": {
    "test": "./node_modules/istanbul/lib/cli.js test test/runner.js"
  },
  "version": "0.3.1"
}
